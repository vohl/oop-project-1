==3578== Memcheck, a memory error detector
==3578== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==3578== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==3578== Command: ./TestCollatz
==3578== 
Running main() from gtest_main.cc
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (28 ms)
[ RUN      ] CollatzFixture.zeros
[       OK ] CollatzFixture.zeros (6 ms)
[ RUN      ] CollatzFixture.read_backwards
[       OK ] CollatzFixture.read_backwards (4 ms)
[ RUN      ] CollatzFixture.eval_zero_range
[       OK ] CollatzFixture.eval_zero_range (4 ms)
[ RUN      ] CollatzFixture.eval_cache_for_3
[       OK ] CollatzFixture.eval_cache_for_3 (2 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_1_backward
[       OK ] CollatzFixture.eval_1_backward (3 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (12 ms)
[ RUN      ] CollatzFixture.print_zeros
[       OK ] CollatzFixture.print_zeros (4 ms)
[ RUN      ] CollatzFixture.solve_all_ones
[       OK ] CollatzFixture.solve_all_ones (12 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (5 ms)
[ RUN      ] CollatzFixture.solve_backwards
[       OK ] CollatzFixture.solve_backwards (5 ms)
[ RUN      ] CollatzFixture.solve_large_gap
[       OK ] CollatzFixture.solve_large_gap (7 ms)
[----------] 16 tests from CollatzFixture (124 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (179 ms total)
[  PASSED  ] 16 tests.
==3578== 
==3578== HEAP SUMMARY:
==3578==     in use at exit: 72,704 bytes in 1 blocks
==3578==   total heap usage: 833 allocs, 832 frees, 165,159 bytes allocated
==3578== 
==3578== LEAK SUMMARY:
==3578==    definitely lost: 0 bytes in 0 blocks
==3578==    indirectly lost: 0 bytes in 0 blocks
==3578==      possibly lost: 0 bytes in 0 blocks
==3578==    still reachable: 72,704 bytes in 1 blocks
==3578==         suppressed: 0 bytes in 0 blocks
==3578== Rerun with --leak-check=full to see details of leaked memory
==3578== 
==3578== For counts of detected and suppressed errors, rerun with: -v
==3578== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
File 'Collatz.c++'
Lines executed:100.00% of 67
Branches executed:100.00% of 68
Taken at least once:69.12% of 68
Calls executed:69.70% of 33
Creating 'Collatz.c++.gcov'
File 'TestCollatz.c++'
Lines executed:100.00% of 64
Branches executed:62.56% of 406
Taken at least once:31.28% of 406
Calls executed:54.70% of 479
Creating 'TestCollatz.c++.gcov'